@using stGenetics.Services
@using AnimalModel.Model
@inject IAnimalService AnimalService
@inject NavigationManager NavigationManager
@page "/animal/cart"
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="#">Cart</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="javascript:void(0)" @onclick="NavigateToDefaultPage">Hone</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="javascript:void(0)" @onclick="NavigateToAnimalPage">Animal</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@if (SelectedAnimals != null && SelectedAnimals.Any())
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>AnimalId</th>
                    <th>Name</th>
                    <th>Breed</th>
                    <th>BirthDate</th>
                    <th>Sex</th>
                    <th>Price</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var animal in SelectedAnimals)
                {
                    <tr>
                        <td>@animal.AnimalId</td>
                        <td>@animal.Name</td>
                        <td>@animal.Breed</td>
                        <td>@animal.BirthDate</td>
                        <td>@animal.Sex</td>
                        <td>@animal.Price</td>
                        <td>@animal.Status</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="5"></td>
                    <td class="text-bold">Total Price:</td>
                    <td>@TotalPrice</td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="row">
        <div class="col-md-6">
            <button class="btn btn-primary" @onclick="PurchaseAnimals">Purchase Animals</button>
        </div>
        <div class="col-md-6">
            <div class="card bg-light">
                <div class="card-body">
                    <p>Total Purchase Amount: @TotalPurchaseAmount</p>
                    <p>Discount Percentage: @CalculateDiscountPercentage()</p>
                    <p>Shipping Amount: @CalculateShippingAmount()</p>
                </div>
            </div>
        </div>
    </div>
}
else
{

    <div class="alert alert-danger" role="alert">
<h2 class="text-center">
    <i class="fas fa-exclamation-circle"></i> No animals selected.
</h2>
        </div>
  


}

@code {
    private void NavigateToDefaultPage()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToAnimalPage()
    {
        NavigationManager.NavigateTo("/animal");
    }

    private List<Animal> SelectedAnimals { get; set; }
    private decimal TotalPrice => SelectedAnimals?.Sum(a => a.Price) ?? 0;

    protected override void OnInitialized()
    {
        SelectedAnimals = GetSelectedAnimalsFromCart();
    }

    private List<Animal> GetSelectedAnimalsFromCart()
    {
        var selectedAnimals = new List<Animal>();

        // Get animal IDs from the URL
        var animalsQueryString = NavigationManager.Uri.Split('?').LastOrDefault()?.Split('=').LastOrDefault();
        if (!string.IsNullOrEmpty(animalsQueryString))
        {
            var animalIds = animalsQueryString.Split(',');
            foreach (var animalId in animalIds)
            {
                // Get details of each animal by its ID and add it to the selected animals list
                if (int.TryParse(animalId, out int id))
                {
                    var animal = AnimalService.GetSingleAnimal(id);
                    if (animal != null)
                    {
                        selectedAnimals.Add(animal);
                    }
                }
            }
        }

        return selectedAnimals;
    }

    private void PurchaseAnimals()
    {
        // Perform the purchase operation for the selected animals
        // For example, you can save the purchase details in the database
        // Reset the selected animals list
        SelectedAnimals = new List<Animal>();
    }

    private int SelectedAnimalCount => SelectedAnimals?.Count ?? 0;

    private decimal TotalPurchaseAmount => CalculateTotalPurchaseAmount();

    private decimal CalculateTotalPurchaseAmount()
    {
        // Logic to calculate the total purchase amount and apply discounts according to the business rules
        decimal totalAmount = SelectedAnimals?.Sum(a => a.Price) ?? 0;

        // Apply a 5% discount if the selected animal count is greater than 5
        if (SelectedAnimalCount > 5)
        {
            decimal discountPercentage = 0.05m;
            totalAmount -= totalAmount * discountPercentage;
        }

        // Apply an additional 3% discount if the selected animal count is greater than 10
        if (SelectedAnimalCount > 10)
        {
            decimal additionalDiscountPercentage = 0.03m;
            totalAmount -= totalAmount * additionalDiscountPercentage;
        }

        return totalAmount;
    }

    private decimal CalculateDiscountPercentage()
    {
        decimal discountPercentage = 0;

        // Calculate the applied discount percentage
        if (SelectedAnimalCount > 5)
            discountPercentage += 5;

        if (SelectedAnimalCount > 10)
            discountPercentage += 3;

        return discountPercentage;
    }

    private decimal CalculateShippingAmount()
    {
        // Calculate the shipping amount
        decimal shippingAmount = SelectedAnimalCount > 20 ? 0 : 1000;

        return shippingAmount;
    }

}
